var urlCategoryApi = "/api/category/",
    maxPrice = 0,
    minPrice = 0,
    listIdAddedInDataLayer = [],
    isFirstLoadMore = !1;
function updateQueryStringParameter(e, t) {
}
function generateHtmlForProduct(e) {
    $.ajax({
        url: "http://localhost/missionpro/loadmore/getmoreproduct",
        dataType: "html",
        type: "GET",
        data: filterModel,
        success: function (t) {
            _.isEmpty(t) ? $(".cate-flex").html("") : (e ? $(".cate-flex").append(t) : $(".cate-flex").html(t), setClock(), centerPaging());
            var r = updateQueryStringParameter(window.location.href, filterModel);
            history.pushState("", "Filter", r), (isScrollCategory = !1), (isProcessCategoryLoadmore = !1), 0 == filterModel.IsNext && (filterModel.Page = 1);
        },
    });
}
function proccessFilter(e, t) {
    isProcessCategoryLoadmore ||
        ((isProcessCategoryLoadmore = !0),
        t ? e.Page++ : (e.Page = 1),
        (!e.IsNext && t) || generateHtmlForProduct(t));
}
function UpdateFilterFromUrl() {
    var e = location.search.substring(1);
    if ("" != location.search.substring(1) && null != location.search.substring(1)) {
        var t = JSON.parse('{"' + decodeURI(e).replace(/"/g, '\\"').replace(/&/g, '","').replace(/=/g, '":"') + '"}');
        for (var r in filterModel)
            if (filterModel.hasOwnProperty(r) && t.hasOwnProperty(r) && null != !t[r]) {
                if (!isFirstLoadMore && "IsNext" == r) continue;
                filterModel[r] = t[r];
            }
    }
}
function checkPrice() {
    var e = $("#min-price").val(),
        t = $("#max-price").val();
    if (((filterModel.IsGetContactPrice = !1), 1 == $(".js-price-list").find("li.active").length)) {
        var r = $(".js-price-list").find("li.active").eq(0);
        (filterModel.MaxPrice = r.attr("data-max")), (filterModel.MinPrice = r.attr("data-min")), null != r.attr("data-contact-price") && (filterModel.IsGetContactPrice = r.attr("data-contact-price"));
    } else _.isEmpty(e) || !Number.isInteger(parseInt(e, 10)) ? (filterModel.MinPrice = 0) : (filterModel.MinPrice = e), _.isEmpty(t) || !Number.isInteger(parseInt(t, 10)) ? (filterModel.MaxPrice = 0) : (filterModel.MaxPrice = t);
    proccessFilter(filterModel, !1);
    var i = updateQueryStringParameter(window.location.href, filterModel);
    history.pushState("", "Filter", i);
}
$(".js-filter ul li").on("click", function () {
    listIdAddedInDataLayer = [];
    0 != $(this).attr("data-id") ? $(this).parent().find("li[data-id=0]").removeClass("active") : $(this).parent().find("li").removeClass("active"),
        setTimeout(function () {
            $(".js-filter").each(function (e, t) {
                var r = "";
                $(t)
                    .find("li.active")
                    .each(function (e, t) {
                        r += 0 != e ? "-" + $(t).attr("data-id") : $(t).attr("data-id");
                    }),
                    $(t).attr("data-type") && (filterModel[$(t).attr("data-type")] = r);
            }),
                proccessFilter(filterModel, !1);
        }, 100);
}),
    $("#cateLoadmore").on("click", function () {

        UpdateFilterFromUrl(), isFirstLoadMore || (filterModel.Page = 1), (isFirstLoadMore = !0), proccessFilter(filterModel, !0);
    }),
    (window.onbeforeunload = function () {
        window.scrollTo(0, 0);
    }),
    $(document).ready(function () {
        if (!isFirstLoadMore) {
            UpdateFilterFromUrl(), (filterModel.Page = 1);
            var e = updateQueryStringParameter(window.location.href, filterModel);
            history.pushState("", "Filter", e);
        }
    }),
    $(".submit-price").on("click", function () {
        $(".js-price-list").find("li.active").length > 0 && $(".js-price-list").find("li.active").removeClass("active"), checkPrice();
    }),
    $(".js-price-list li").on("click", function () {
        var e = this;
        setTimeout(function () {
            $(".js-price-list").find("li.active").removeClass("active"), $(e).addClass("active"), checkPrice();
        }, 100);
    }),
    $(".js-sort li").on("click", function () {
        var e = this;
        setTimeout(function () {
            $(".js-sort").find("li.active").removeClass("active"), $(e).addClass("active"), (filterModel.SortType = $(e).attr("data-sort")), proccessFilter(filterModel, !1);
            var t = updateQueryStringParameter(window.location.href, filterModel);
            history.pushState("", "Filter", t);
        }, 100);
    }),
    $(window).on("scroll", function () {
        if (!isScrollCategory)
            if (((isScrollCategory = !0), $(".product-item ").length < 32 && 1 == filterModel.IsNext && !isProcessCategoryLoadmore)) {
                var e = $(".cate-product").height() + $(".fs-header").height();
                window.scrollY >= 0.7 * e ? $("#cateLoadmore").trigger("click") : (isScrollCategory = !1);
            } else isScrollCategory = !1;
    }),
    $(document).on("click", ".is-delete", function () {
        $(".filter-nav li").removeClass("active"),
            $(".filter-item li").removeClass("active"),
            $(".filter-nav li:first").addClass("active"),
            $(".filter-item li:first").addClass("active"),
            $(".items-sp .filter-item ul li.all-filter").addClass("active"),
            $(".js-price-list li:first").addClass("active"),
            (filterModel.Page = 0),
            (filterModel.FilterFeatures = null),
            (filterModel.FilterSubCategoryId = null),
            (filterModel.FilterCategoryId = null),
            (filterModel.FilterDemandUsers = null),
            (filterModel.FilterBrands = null),
            (filterModel.MaxPrice = 0),
            (filterModel.MinPrice = 0),
            (filterModel.SortType = 0),
            proccessFilter(filterModel, !1);
        var e = updateQueryStringParameter(window.location.href, filterModel);
        history.pushState("", "Filter", e);
    });
